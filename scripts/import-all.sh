#!/bin/bash

# Script para importar todo desde Cryptomate
# Importa cards, usuarios y transacciones en un solo comando

echo "üöÄ Starting complete import from Cryptomate..."
echo "üìã Step 1: Importing all cards and users"
echo "üí≥ Step 2: Importing all transactions"
echo "============================================================"

# Verificar que el servidor est√© corriendo
echo ""
echo "üîç Checking server status..."
if curl -s http://localhost:3001/api/health > /dev/null; then
    echo "‚úÖ Server is running and ready"
else
    echo "‚ùå Server is not running or not accessible"
    echo "üí° Please start the server with: npm start"
    exit 1
fi

# Paso 1: Importar cards y usuarios
echo ""
echo "üìã STEP 1: Importing cards and users from Cryptomate..."
CARDS_START=$(date +%s)

CARDS_RESULT=$(curl -s -X POST http://localhost:3001/api/real-cryptomate/import-real-data)

if [ $? -eq 0 ]; then
    CARDS_END=$(date +%s)
    CARDS_TIME=$((CARDS_END - CARDS_START))
    
    echo "‚úÖ Cards import completed in ${CARDS_TIME}s"
    
    # Extraer informaci√≥n del resultado (b√°sico)
    echo "üìã Cards import result:"
    echo "$CARDS_RESULT" | grep -o '"cardsImported":[0-9]*' | head -1
    echo "$CARDS_RESULT" | grep -o '"users":[0-9]*' | head -1
    echo "$CARDS_RESULT" | grep -o '"cardsUpdated":[0-9]*' | head -1
else
    echo "‚ùå Cards import failed"
    exit 1
fi

# Esperar un momento para que se procesen las cards
echo ""
echo "‚è≥ Waiting 5 seconds for cards to be processed..."
sleep 5

# Paso 2: Importar transacciones
echo ""
echo "üí≥ STEP 2: Importing transactions from Cryptomate..."
echo "‚ö° This may take several minutes depending on the number of cards..."

TRANSACTIONS_START=$(date +%s)

node scripts/import-optimized-transactions.js

TRANSACTIONS_EXIT_CODE=$?
TRANSACTIONS_END=$(date +%s)
TRANSACTIONS_TIME=$((TRANSACTIONS_END - TRANSACTIONS_START))
TRANSACTIONS_MINUTES=$((TRANSACTIONS_TIME / 60))

if [ $TRANSACTIONS_EXIT_CODE -eq 0 ]; then
    echo "‚úÖ Transactions import completed in ${TRANSACTIONS_MINUTES} minutes"
else
    echo "‚ö†Ô∏è  Transactions import completed with some errors"
    echo "üí° Check the output above for details"
fi

# Mostrar resumen final
TOTAL_END=$(date +%s)
TOTAL_TIME=$((TOTAL_END - CARDS_START))
TOTAL_MINUTES=$((TOTAL_TIME / 60))

echo ""
echo "============================================================"
echo "üéâ COMPLETE IMPORT FINISHED!"
echo "üìä Final Summary:"
echo "   ‚è±Ô∏è  Total time: ${TOTAL_MINUTES} minutes"
echo "   üìà Cards import: ${CARDS_TIME}s"
echo "   üìà Transactions import: ${TRANSACTIONS_MINUTES} minutes"
echo ""
echo "‚úÖ Your dev database is now fully populated with Cryptomate data!"
echo "üîç You can verify the import by checking:"
echo "   - GET /api/cards/admin/all (to see all cards)"
echo "   - GET /api/cards/admin/stats (to see statistics)"
echo "   - GET /api/cards/card/{cardId}/transactions (to see transactions)"
echo ""

if [ $TRANSACTIONS_EXIT_CODE -eq 0 ]; then
    echo "üéâ All imports completed successfully!"
    exit 0
else
    echo "‚ö†Ô∏è  Import completed with some errors"
    exit 1
fi
